When would you want to use a remote repository rather than keeping all your work local?

  That is because I want to make sure what I am doing, in terms of merging commits to
  the files on local machines.

Why might you want to always pull changes manually rather than having Git automatically
stay up-to-date with your remote repository?

  Pulling changes from a remote repository means fetching changes and merging them into
  whatevet the branch specified. Therefore, you don't want git to automatically merge
  commits to your branch behind the seen. Rather, you want to make sure what you have
  been doing with the local and remote branches.

  Also, you want to know if changes are commited on the remote repository. By syncing
  changes manually, you will know it when you try to sync.

Describe the differences between forks, clones, and branches. When would you use one
instead of another?

  Fork: Close to clone (copying the repository and reference to the original repository)
        , which occurs only on GitHub.
  Clones: To make a copy of a repository.
  Branches: Labeling on a specific commit. It is used for organizing commits.

What is the benefit of having a copy of the last known state of the remote stored locally?

  By doing so, you may find out when updates are made on the remote repository by
  comparing the last known state of the local and the one on the remote.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

  You don't have to remember all the commands need for collaboration. However, I think it
  costs more if you don't use Git and GitHub, like manual operation and communication.
  For example, you need to open up an email client to send a notification to your collaborators.
  Also, you need to have a local server that hosts the shared resources which costs a lot.
  These costs may cost more than the costs of learning how to use Git and GitHub.

