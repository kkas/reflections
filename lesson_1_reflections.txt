How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It made a lot easier to find out the differrences.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    First, since I could see what changes I have made among commits using diff, I will be able to go back and retrive the previous file. Also, if I make some mistakes, like typo, I will also be able to find it out quickly.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: the history is easy to look at. Especially, with commit log.

    Cons: I might forget to save it before deleting it accidentally.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Sinse the commits are made by logical grouping of changes, the change can affect multiple files, like adding a new tag in HTML and CSS for stlying it. In such case, all the files should be tracked at the time when the commit is made.

How can you use the commands git log and git diff to view the history of files?

    To find out what commit introduces a bug. and what cnages have been made and when.

How might using version control make you more confident to make changes that
could break something?

    You can go back to the previous version anytime you want, so there is no need to be afraid to make changes.

Now that you have your workspace set up, what do you want to try using Git for?

    I would like to use it for my projects.

